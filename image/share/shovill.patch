diff --git a/bin/shovill b/bin/shovill
index a2b2c13..bd7f315 100755
--- a/bin/shovill
+++ b/bin/shovill
@@ -29,7 +29,7 @@ my @LOG= ();      # global log file, saved at end
 # Options
 msg("You ran: $0 @ARGV");
 my(@Options, $debug, $version, 
-             $outdir, $force, $cpus, $tmpdir, $keepfiles,
+             $outdir, $force, $cpus, $tmpdir, $keepfiles, $ram,
              $kmers, $gsize, $R1, $R2, $opts,
              $nocorr, $trim, $trimopt, $asm, $minlen, $mincov);
 setOptions();
@@ -54,6 +54,7 @@ is_integer($minlen) or err("Invalid --minlen $minlen");
 is_integer($mincov) or err("Invalid --mincov $mincov");
 my $lesscpus = min(1, max(4, int($cpus/4)));  # for samtools sort in pipe
 $VALID_ASM{ $asm } or err( "Invalid --asm must be one of: ",join(' ', keys %VALID_ASM) );
+$ram =~ s/^\s+|\s+$//g;
 
 # Check we have the required binaries
 for my $exe (qw(seqtk kmc trimmomatic lighter flash spades.py bwa samtools java pilon tee)) {
@@ -81,7 +82,7 @@ unless ($gsize) {
   msg("Estimating genome size with 'kmc'");
   # FIXME: want to choose a dynamic kmer cutoff for high cov samples
   my $minkc = 3;  # max(3, int($depth/100));
-  run_cmd("kmc -ci$minkc -k25 -t$cpus \Q$R1\E kmc $tmpdir", "20-kmc.log");
+  run_cmd("kmc -m$ram -ci$minkc -k25 -t$cpus \Q$R1\E kmc $tmpdir", "20-kmc.log");
   my($ucount) = grep { m/unique\s+counted/ } read_file('20-kmc.log');
   $ucount =~ m/(\d+)$/ or err("Could not determine unique counted k-mers using kmc");
   $gsize = $1;
@@ -402,6 +403,7 @@ sub setOptions {
     {OPT=>"asm=s",  VAR=>\$asm, DEFAULT=>'contigs', DESC=>"Spades result to correct: before_rr contigs scaffolds"},
     {OPT=>"tmpdir=s",  VAR=>\$tmpdir, DEFAULT=>$ENV{TMPDIR} || '/tmp', DESC=>"Fast temporary directory"},
     {OPT=>"keepfiles!",  VAR=>\$keepfiles, DEFAULT=>0, DESC=>"Keep intermediate files"},
+    {OPT=>"ram!",  VAR=>\$ram, DEFAULT=>12, DESC=>"Amount of ram to use for kmc"},
   );
 
   (!@ARGV) && (usage());
